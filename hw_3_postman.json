{
	"info": {
		"_postman_id": "cfc9bfbd-09f8-4347-8a6e-7b58ff3b89ed",
		"name": "hw_3_postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let RSData = pm.response.json();\r",
							"console.log(RSData.token);\r",
							"pm.environment.set(\"token\", RSData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/login?login=GraFF&password=56789sss",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "GraFF"
						},
						{
							"key": "password",
							"value": "56789sss"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let rsdata = pm.response.json();\r",
							"let rqdata = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"pm.environment.set(\"salary\", rqdata.salary)\r",
							"\r",
							"pm.test(\"Age_person\", function () {\r",
							"    let RSD = pm.response.json();\r",
							"    pm.expect(RSD.person.u_age).to.eql(27);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"type\": \"integer\"},\r",
							"                    \"u_name\": {\r",
							"                        \"type\": \"array\", \r",
							"                        \"items\":[\r",
							"                            {\"type\": \"string\"},\r",
							"                            {\"type\": \"integer\"},\r",
							"                            {\"type\": \"integer\"},\r",
							"                        ]\r",
							"                    },\r",
							"                    \"u_salary_1_5_year\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"qa_salary_after_12_months\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"qa_salary_after_6_months\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"start_qa_salary\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    };\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"salary_up\", function () {\r",
							"    pm.expect(rsdata.person.u_salary_1_5_year).to.eql(rqdata.salary*4);\r",
							"    pm.expect(rsdata.qa_salary_after_6_months).to.eql(rqdata.salary*2);\r",
							"    pm.expect(rsdata.qa_salary_after_12_months).to.eql(rqdata.salary*2.9);\r",
							"})\r",
							"let may_salary = rsdata.person.u_salary_1_5_year;\r",
							"    pm.environment.set(\"may_salary\", may_salary);\r",
							"    \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": \"27\",\r\n    \"salary\": \"2300\",\r\n    \"name\": \"Anatoliy\",\r\n    \"auth_token\": \"{{token}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\"type\":\"integer\"},\r",
							"        \"name\": {\"type\":\"string\"},\r",
							"        \"salary\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": [\r",
							"                {\"type\": \"integer\"},\r",
							"                {\"type\": \"string\"},\r",
							"                {\"type\": \"string\"},\r",
							"            ]\r",
							"        }\r",
							"        }\r",
							"};\r",
							"\r",
							"\r",
							"pm.test(\"json or not json\", function () {\r",
							"    var respData = pm.response.json();\r",
							"    pm.expect(respData.name).to.eql(\"Anatoliy\");\r",
							"});\r",
							"let rsData = pm.response.json();\r",
							"let rqData = request.data;\r",
							"pm.test(\"salary\", function () {\r",
							"\r",
							"    pm.expect(+ rsData.salary[1]).to.eql(rqData.salary*2);\r",
							"    pm.expect(+ rsData.salary[2]).to.eql(rqData.salary*3);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_das_Gut\", function () {\r",
							"    pm.expect(+ rsData.salary[2]).to.be.above(rsData.salary[0]);\r",
							"    pm.expect(+ rsData.salary[2]).to.be.above(+ rsData.salary[1]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"name\": \"string\"\r",
							"    },\r",
							"};\r",
							"\r",
							"\r",
							"pm.test(\"Big_slim\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(27);\r",
							"});\r",
							"let RSData = pm.response.json();\r",
							"let RQData = request.data;\r",
							"\r",
							"pm.test(\"weight-fight\", function () {\r",
							"    pm.expect(RSData.daily_food).to.eql(RQData.weight*0.012);\r",
							"    pm.expect(RSData.daily_sleep).to.eql(RQData.weight*2.5);\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "100",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"children\": \"array\",\r",
							"                \"items\": [{\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": [\r",
							"                        {\"type\": \"string\"},\r",
							"                        {\"type\": \"integer\"}],\r",
							"                        \r",
							"                            \"type\": \"array\",\r",
							"                            \"items\": [{\r",
							"                                \"type\": \"string\"\r",
							"                            },\r",
							"                            {\"type\": \"integer\"}]\r",
							"                }\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }                   \r",
							"            },\r",
							"            \"name\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"salary\": {\r",
							"                \"type\": \"integer\"\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"};\r",
							"\r",
							"\r",
							"pm.test(\"json das ist json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(2300);\r",
							"});\r",
							"let rsData = pm.response.json();\r",
							"let rqData = request.data;\r",
							"let name = rqData.name;\r",
							"pm.environment.set(\"name\", name);\r",
							"\r",
							"pm.test(\"name is name\", function () {\r",
							"    pm.expect(rsData.name).to.eql(pm.environment.get('name'));\r",
							"});\r",
							"pm.test(\"age is age\", function () {\r",
							"    pm.expect(rsData.age).to.eql(rqData.age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"const fig = resp;\r",
							"\r",
							"const Rfig = fig[Math.floor(Math.random() * fig.length)];\r",
							"\r",
							"console.log(Rfig.Cur_ID);\r",
							"\r",
							"let code = Rfig.Cur_ID;\r",
							"console.log(code);\r",
							"pm.environment.set(\"code\", code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Money=honey\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Cur_Name).to.eql(\"Новых израильских шекелей\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"Cur_Abbreviation\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Cur_ID\": {\r",
							"            \"type\": \"ineger\"\r",
							"        },\r",
							"        \"Cur_Name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Cur_OffcialRate\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Cur_Scale\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Date\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{code}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/curr_byn",
					"host": [
						"{{url}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency***",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Cur_Name=\"Аргентинское песо\").to.eql(\"Аргентинское песо\");\r",
							"});\r",
							"\r",
							"console.log(pm.response.json());\r",
							"\r",
							"let RSData = pm.response.json();\r",
							"console.log(pm.request);\r",
							"pm.test(\"Цикл\", function () {\r",
							"    for (let i = 0; i <RSData.length; i++) {\r",
							"        let reqData = {\r",
							"            url: \"http://162.55.220.72:5005/curr_byn\",\r",
							"            method: 'POST',\r",
							"            header: {'Content-Tupe': 'multipart/form-data',},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'auth_token', value: pm.environment.get('token')},\r",
							"                {key: 'curr_code', value: RSData[i].Cur_ID}\r",
							"            ]\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}